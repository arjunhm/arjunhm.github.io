{"componentChunkName":"component---src-templates-post-js","path":"/2024-03-25-go-gotchas/","result":{"data":{"markdownRemark":{"html":"<h2>Loops</h2>\n<p>Loop over an array and append <code class=\"language-text\">5</code> to it four times</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">simpleTest</span><span class=\"token punctuation\">(</span>arr <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    c <span class=\"token operator\">:=</span> <span class=\"token number\">0</span>\r\n    <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> n <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> arr <span class=\"token punctuation\">{</span> <span class=\"token comment\">// This fails</span>\r\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// this works</span>\r\n        fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span>\r\n        arr <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\n        c<span class=\"token operator\">++</span>\r\n        <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">break</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">range</code> only executes once when the loop is entered, after which the slice is captured in an auto temporary. Equivalent to this</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">arr <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span>\r\nc <span class=\"token operator\">:=</span> <span class=\"token number\">0</span>\r\n_tmp_0 <span class=\"token operator\">:=</span> arr <span class=\"token comment\">// Shallow copy</span>\r\n<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> n <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> _tmp_0 <span class=\"token punctuation\">{</span>\r\n  arr <span class=\"token operator\">=</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\n  c<span class=\"token operator\">++</span>\r\n  <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">break</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>More info here: <a href=\"https://go.dev/ref/spec\" title=\"https://go.dev/ref/spec\">https://go.dev/ref/spec</a></p>\n<h2>Pointers</h2>\n<p>Pointers of a struct can access <strong>fields/methods</strong> without dereferencing</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> A <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\r\n\tval <span class=\"token builtin\">int</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">func</span> <span class=\"token function\">createA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>A<span class=\"token punctuation\">{</span>\r\n\ta <span class=\"token operator\">:=</span> A<span class=\"token punctuation\">{</span>val<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span>\r\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>a\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n\tb <span class=\"token operator\">:=</span> <span class=\"token function\">createA</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">)</span> <span class=\"token comment\">// this works as (*b).val</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"(Go)tchas","date":"2024-03-25T00:00:00.000Z"}}},"pageContext":{"slug":"/2024-03-25-go-gotchas/"}},"staticQueryHashes":[],"slicesMap":{}}